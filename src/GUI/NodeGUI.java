package GUI;

import distributedassignment.Coordinator;
import distributedassignment.Message;
import distributedassignment.Node;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Timer;

public class NodeGUI extends javax.swing.JFrame {

    private Node n;
    private Coordinator c;

    public NodeGUI() {
        initComponents();
    }

    public NodeGUI(Coordinator n) {
        initComponents();

        this.n = n;
        this.c = n;
        this.initialState();
    }

    public NodeGUI(Node n, Coordinator c) {
        initComponents();

        this.n = n;
        this.c = c;
        this.initialState();
    }

    public void initialState() {
        this.n.setNg(this);
        this.nodeList.setEnabled(false);
        this.publicType.setSelected(true);
        this.refreshNodeList();
        this.welcomeMessage.setText("Welcome back " + n.getName());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        sendBox = new javax.swing.JTextArea();
        nodeList = new javax.swing.JComboBox<>();
        privateType = new javax.swing.JRadioButton();
        publicType = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        welcomeMessage = new javax.swing.JLabel();
        sendButton = new javax.swing.JButton();
        messageType = new javax.swing.JLabel();
        recieved = new javax.swing.JLabel();
        leaveButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        recievedBox = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        sendBox.setColumns(20);
        sendBox.setRows(5);
        jScrollPane1.setViewportView(sendBox);

        nodeList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nodeListMouseClicked(evt);
            }
        });
        nodeList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nodeListActionPerformed(evt);
            }
        });

        buttonGroup1.add(privateType);
        privateType.setText("Private");
        privateType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                privateTypeActionPerformed(evt);
            }
        });

        buttonGroup1.add(publicType);
        publicType.setText("Public");
        publicType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                publicTypeActionPerformed(evt);
            }
        });

        jLabel1.setText("Target Node:");

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));
        jPanel1.setForeground(new java.awt.Color(0, 204, 255));

        welcomeMessage.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        welcomeMessage.setForeground(new java.awt.Color(255, 255, 255));
        welcomeMessage.setText("Messaging Board");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(191, 191, 191)
                .addComponent(welcomeMessage)
                .addContainerGap(196, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(welcomeMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(27, 27, 27))
        );

        sendButton.setBackground(new java.awt.Color(0, 102, 102));
        sendButton.setForeground(new java.awt.Color(255, 255, 255));
        sendButton.setText("Send");
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });
        sendButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sendButtonKeyPressed(evt);
            }
        });

        messageType.setText("Message Type:");

        recieved.setText("Recieved Messages:");

        leaveButton.setBackground(new java.awt.Color(204, 0, 0));
        leaveButton.setForeground(new java.awt.Color(255, 255, 255));
        leaveButton.setText("Leave");
        leaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leaveButtonActionPerformed(evt);
            }
        });

        recievedBox.setEditable(false);
        recievedBox.setColumns(20);
        recievedBox.setRows(5);
        jScrollPane2.setViewportView(recievedBox);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(recieved, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(195, 195, 195)
                                .addComponent(sendButton))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(leaveButton)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(messageType, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(privateType, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(publicType, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(nodeList, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE)))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(recieved)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(publicType)
                    .addComponent(privateType)
                    .addComponent(messageType))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nodeList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sendButton)
                .addGap(18, 18, 18)
                .addComponent(leaveButton)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void publicTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_publicTypeActionPerformed
        // TODO add your handling code here:
        this.nodeList.setEnabled(false);
    }//GEN-LAST:event_publicTypeActionPerformed

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        //Message
        if (this.publicType.isSelected() || this.privateType.isSelected()) {
            String message = sendBox.getText();

            try {
                if (this.n != null) {
                    //Public or Private   
                    if (this.publicType.isSelected()) {
                        //Send through successor

                        Message msg = new Message(message, this.n.getName());
                        for (Node node : this.c.getRingNetwork().getRing()) {
                            node.sendMessage(msg);
                        }
                    } else if (this.privateType.isSelected()) {
                        String selected = (String) this.nodeList.getSelectedItem();
                        Node target = null;
                        for (Node n : this.c.getRingNetwork().getRing()) {
                            if (n.getName().equals(selected)) {
                                target = n;
                                break;
                            }
                        }
                        //Encrypt message here
                        message = this.n.encryptMessage(message, target.getHostID());
                        System.out.println("Encrypted " + message);
                        Message msg = new Message(message, this.n.getName(), this.n.getHostID(), target.getHostID());
                        for (Node node : this.c.getRingNetwork().getRing()) {
                            node.sendMessage(msg);
                        }
                    }

                    //Reset Send Box
                    this.sendBox.setText("");
                }
            } catch (IOException ex) {
                Logger.getLogger(NodeGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_sendButtonActionPerformed

    private void privateTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_privateTypeActionPerformed
        // TODO add your handling code here:
        this.nodeList.setEnabled(true);
        this.nodeList.removeAllItems();
        for (Node node : this.c.getRingNetwork().getRing()) {
            this.nodeList.addItem(node.getName());
        }
    }//GEN-LAST:event_privateTypeActionPerformed

    private void nodeListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nodeListActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_nodeListActionPerformed

    private void nodeListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nodeListMouseClicked
        // TODO add your handling code here:
        this.nodeList.removeAllItems();
        for (Node node : this.c.getRingNetwork().getRing()) {
            this.nodeList.addItem(node.getName());
        }
    }//GEN-LAST:event_nodeListMouseClicked

    private void sendButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sendButtonKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_sendButtonKeyPressed

    private void leaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leaveButtonActionPerformed
        // TODO add your handling code here:
        this.c.leaveNetwork(this.n);
        if (this.c.getRingNetwork().getRing().isEmpty()) {
            System.exit(0);
        } else {
            this.dispose();
        }
    }//GEN-LAST:event_leaveButtonActionPerformed
    public synchronized void refreshMessages(String message) {
        if (this.n != null) {

            this.recievedBox.append(message + "\n");

        }
        this.recievedBox.setCaretPosition(this.recievedBox.getDocument().getLength());
    }

    public synchronized void refreshNodeList() {
        this.nodeList.removeAllItems();
        for (Node node : this.c.getRingNetwork().getRing()) {
            this.nodeList.addItem(node.getName());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NodeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NodeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NodeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NodeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NodeGUI().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton leaveButton;
    private javax.swing.JLabel messageType;
    private javax.swing.JComboBox<String> nodeList;
    private javax.swing.JRadioButton privateType;
    private javax.swing.JRadioButton publicType;
    private javax.swing.JLabel recieved;
    private javax.swing.JTextArea recievedBox;
    private javax.swing.JTextArea sendBox;
    private javax.swing.JButton sendButton;
    private javax.swing.JLabel welcomeMessage;
    // End of variables declaration//GEN-END:variables
}
